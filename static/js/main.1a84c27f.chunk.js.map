{"version":3,"sources":["components/MovieList.js","components/SearchBar.js","components/App.js","index.js"],"names":["MovieList","props","className","movies","map","movie","src","poster_path","alt","height","title","overview","type","onClick","event","deleteMovieProp","vote_average","id","SearchBar","state","searchQuery","handleFormSubmit","preventDefault","onSubmit","this","onChange","searchMovieProp","placeholder","React","Component","require","config","App","deleteMovie","filter","m","a","axios","post","process","newMovieList","setState","searchMovie","target","value","get","response","data","results","filteredMovies","toLowerCase","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA2CeA,EAvCG,SAACC,GAMjB,OAGE,aAFA,CAEA,OAAKC,UAAU,WAAf,SACGD,EAAME,OAAOC,KAAI,SAACC,GAAD,OAEhB,aADA,CACA,OAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBACEI,IAAG,4DAAuDD,EAAME,aAChEL,UAAU,eACVM,IAAI,eACJC,OAAO,QAET,sBAAKP,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BG,EAAMK,QAClC,mBAAGR,UAAU,YAAb,SAA0BG,EAAMM,WAChC,sBAAKT,UAAU,WAAf,UACE,wBAAQU,KAAK,SAASC,QAAS,SAACC,GAAD,OAAUb,EAAMc,gBAAgBV,IAAQH,UAAU,gCAAjF,oBAGA,6BACE,sBAAMA,UAAU,mBAAhB,SAAoCG,EAAMW,2BAhBrBX,EAAMY,UCiB9BC,E,4MA7BfC,MAAQ,CACJC,YAAa,I,EAGjBC,iBAAmB,SAACP,GAChBA,EAAMQ,kB,uDAIF,OACG,sBAAMC,SAAWC,KAAKH,iBAAtB,SACK,qBAAKnB,UAAU,iBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,8BACG,uBACCuB,SAAWD,KAAKvB,MAAMyB,gBACrBd,KAAK,OAAOV,UAAU,eACtByB,YAAY,+B,GAnBjBC,IAAMC,W,iBCE9BC,EAAQ,IAAUC,S,IA0GHC,E,4MArGbb,MAAQ,CACNhB,OAAQ,GACRiB,YAAY,I,EAgCda,YAAc,SAAC5B,GACS,EAAKc,MAAMhB,OAAO+B,QAAO,SAACC,GAAD,OAAOA,EAAElB,KAAOZ,EAAMY,O,EAatEgB,Y,uCAAc,WAAO5B,GAAP,eAAA+B,EAAA,sDACZC,IAAMC,KAAN,yEAA6EjC,EAAMY,GAAnF,uBAAoGsB,2CAApG,oBAAgJA,qCACzIC,EAAe,EAAKrB,MAAMhB,OAAO+B,QAAO,SAACC,GAAD,OAAOA,EAAElB,KAAOZ,EAAMY,MAStE,EAAKwB,UAAS,SAACtB,GAAD,MAAY,CACxBhB,OAAQqC,MAZG,2C,wDAiBfE,YAAc,SAAC5B,GAKb,EAAK2B,SAAS,CAACrB,YAAaN,EAAM6B,OAAOC,S,kMA7CjBP,IAAMQ,IAAN,6DAAgEN,mCAAhE,2B,OAAjBO,E,OAGPtB,KAAKiB,SAAS,CAAEtC,OAAQ2C,EAASC,KAAKC,U,qIA8C9B,IAAD,OAEHC,EAAiBzB,KAAKL,MAAMhB,OAAO+B,QACrC,SAAC7B,GACC,OAAoF,IAA7EA,EAAMK,MAAMwC,cAAcC,QAAQ,EAAKhC,MAAMC,YAAY8B,kBAIpE,OACE,qBAAKhD,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWwB,gBAAkBF,KAAKkB,kBAGtC,cAAC,EAAD,CACEvC,OAAQ8C,EACRlC,gBAAiBS,KAAKS,uB,GA7FhBL,IAAMC,W,MCDxBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1a84c27f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//state durumu ortadan kalktığı için functional yapıya çevirdik class componentinden\r\n\r\nconst MovieList = (props) => {\r\n\r\n// function handleClick(event){\r\n//   console.log(event.pageY);\r\n// }\r\n\r\n  return (\r\n    //ilk önce col ve row'u ayırdık col kısmını alıp map kısmının içine koyduk\r\n    //this.props.movie kısmındaki this'i sildik class compenent yapısını silince. Yoksa hata veriyor\r\n    <div className=\"row main\">\r\n      {props.movies.map((movie) => (\r\n        //movie.id yazarak componentleri birbirinden ayırt etmiş olduk\r\n        <div className=\"col-lg-4\" key={movie.id}>\r\n          <div className=\"card mb-4 shadow-sm\">\r\n            <img\r\n              src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${movie.poster_path}`}\r\n              className=\"card-img-top\"\r\n              alt=\"Sample Movie\"\r\n              height=\"500\"\r\n            />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{movie.title}</h5>\r\n              <p className=\"card-text\">{movie.overview}</p>\r\n              <div className=\"main-box\">\r\n                <button type=\"button\" onClick={(event)=> props.deleteMovieProp(movie)} className=\"btn btn-md btn-outline-danger\">\r\n                  Delete\r\n                </button>\r\n                <h2>\r\n                  <span className=\"badge badge-info\">{movie.vote_average}</span>\r\n                </h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n\r\nstate = {\r\n    searchQuery: \"\"\r\n}\r\n // event.preventDefault varsayılan davranışı durdurdu. Mesela search butonuna gidip yazdığımızda sayfayı yenilemiyor\r\nhandleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n}\r\n\r\n    render() {\r\n        return (\r\n           <form onSubmit= {this.handleFormSubmit}>\r\n                <div className=\"form-row  mb-3\">\r\n                    <div className=\"col-12\">\r\n                        <div>\r\n                           <input\r\n                            onChange= {this.props.searchMovieProp} \r\n                             type=\"text\" className=\"form-control\" \r\n                             placeholder=\"Search a movie\"\r\n                        \r\n                             />\r\n                        </div>\r\n\r\n                    </div>\r\n               </div>\r\n           </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\nimport MovieList from \"./MovieList\";\nimport SearchBar from \"./SearchBar\";\nimport axios from \"axios\";\nrequire('dotenv').config();\n\n\n\nclass App extends React.Component {\n  state = {\n    movies: [],\n    searchQuery:\"\"\n  };\n  \n//fetch'den gelen promiseleri asenkron yapıyı kabul etmek için async ve await kullandık\n  // async componentDidMount() {\n  //   //verilerimizin olduğu yer URL\n  //   const baseURL = \"http://localhost:3002/movies\";\n  //   const response = await fetch(baseURL);\n  //   console.log(response)\n  //   //response.json demek; gelen veri json formatında olsun.\n  //   const data = await response.json();\n  //   console.log(data)\n  //   //gelen data'yı movies'in içine yerleştirdik.\n  //   this.setState({movies: data})\n  // }\n\n  //axios ile tek seferde verileri json formatında aldık.\n  //yukarındankinden farkı response fetch kullanmadık. response ile çevirmemize de gerek kalmadan direkt dataya ulaştık\n\n\n\n  async componentDidMount() {\n    // 1.const populer filmlerden çektiğimiz apı, 2.ise bizim kendi oluşturduğumuz moviedb deki listemiz.\n     const response = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`);\n   // const response = await axios.get(`https://api.themoviedb.org/3/list/7073237?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    //console.log(response.data.items);\n    this.setState({ movies: response.data.results})\n  }\n\n\n\n\n  deleteMovie = (movie) => {\n     const newMovieList = this.state.movies.filter((m) => m.id !== movie.id);\n  }\n\n  //FETCH API\n  // deleteMovie = async (movie) => {\n  //   const baseURL = `http://localhost:3002/movies/${movie.id}`\n  //   await fetch(baseURL, {\n  //     method:\"DELETE\"\n  //   })\n  //    const newMovieList = this.state.movies.filter((m) => m.id !== movie.id);\n\n\n//AXİOS API\n   deleteMovie = async (movie) => {\n     axios.post(`https://api.themoviedb.org/3/list/7073237/remove_item?media_id=${movie.id}&session_id=${process.env.REACT_APP_SESSION_ID}&api_key=${process.env.REACT_APP_API_KEY}`)\n      const newMovieList = this.state.movies.filter((m) => m.id !== movie.id);\n     \n\n    //movies'i NewMovieList olarak değiştirdik. Elimizde film bilgisi olmasaydı bunu kullanırdık.\n    // this.setState({\n    //   movies: newMovieList\n    // })\n\n    // Yukarıdakine alternatif, diğer yol.\n    this.setState((state) => ({\n      movies: newMovieList,\n    }));\n\n\n    }\n  searchMovie = (event) => {\n//search butonunda yazı yazdığımız değerler\n    //console.log(event.target.value)\n\n   //state'i update ettik. Her değişiklik yaptığımızda uptade etmiş olacağız.\n    this.setState({searchQuery: event.target.value})\n\n  }\n  \n  render() {\n\n    let filteredMovies = this.state.movies.filter(\n      (movie) => {\n        return movie.title.toLowerCase().indexOf(this.state.searchQuery.toLowerCase()) !== -1\n      }\n    )\n\n    return (\n      <div className=\"mt-3\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12 mb-5\">\n              <SearchBar searchMovieProp= {this.searchMovie} />\n            </div>\n          </div>\n          <MovieList\n            movies={filteredMovies} \n            deleteMovieProp={this.deleteMovie} //delete'i propslayacağız\n          />\n        </div>\n      </div>\n    \n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}